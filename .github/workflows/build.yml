---
name: Build image
on:
  pull_request:
    branches:
      - main
      - lts
  push:
    branches:
      - main
      - lts
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:
  schedule:
    - cron: '0 5 */2 * *' # every other day (05:00 UTC)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: "${{ github.event.repository.name }}"
      IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"

    steps:
      - name: Prepare environment
        run: |
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          BRANCH="${{ github.ref_name }}"
          if [ "$BRANCH" = "main" ]; then
            echo "DEFAULT_TAG=latest" >> ${GITHUB_ENV}
          elif [ "$BRANCH" = "lts" ]; then
            echo "DEFAULT_TAG=lts" >> ${GITHUB_ENV}
          elif [ "$BRANCH" = "test" ]; then
            echo "DEFAULT_TAG=test" >> ${GITHUB_ENV}
          else
            echo "DEFAULT_TAG=dev" >> ${GITHUB_ENV}
          fi
          echo "DATE_TAG=$(date -u +%Y%m%d)" >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.DEFAULT_TAG }}
            ${{ env.DEFAULT_TAG }}.${{ env.DATE_TAG }}
            ${{ env.DATE_TAG }}
          oci: true
          build-args: |
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            IMAGE_REGISTRY=${{ env.IMAGE_REGISTRY }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        if: github.event_name != 'pull_request'
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.DEFAULT_TAG }}
            ${{ env.DEFAULT_TAG }}.${{ env.DATE_TAG }}
            ${{ env.DATE_TAG }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.10.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_FULL="${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}"
          for tag in ${{ env.DEFAULT_TAG }} ${{ env.DEFAULT_TAG }}.${{ env.DATE_TAG }} ${{ env.DATE_TAG }}; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY $IMAGE_FULL:$tag
          done
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}